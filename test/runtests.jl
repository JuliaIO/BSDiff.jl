using Test
using BSDiff
using Pkg.Artifacts

const test_data = artifact"test_data"

@testset "BSDiff" begin
    @testset "registry data" begin
        registry_data = joinpath(test_data, "registry")
        old = joinpath(registry_data, "before.tar")
        new = joinpath(registry_data, "after.tar")
        ref = joinpath(registry_data, "reference.diff")
        old_data = read(old)
        new_data = read(new)
        @testset "low-level API" begin
            # test that diff is identical to reference bsdiff output
            diff = sprint() do io
                BSDiff.write_diff(io, old_data, new_data)
            end |> codeunits
            @test read(ref) == diff
            # test that applying reference patch to old produces new
            new_data′ = open(ref) do patch
                sprint() do new
                    BSDiff.apply_patch(old_data, patch, new, length(new_data))
                end |> codeunits
            end
            @test new_data == new_data′
        end
        if Sys.which("bsdiff") != nothing && Sys.which("bspatch") != nothing
            @testset "high-level API" begin
                # test that bspatch command accepts patches we generate
                patch = bsdiff(old, new)
                new′ = tempname()
                run(`bspatch $old $new′ $patch`)
                @test new_data == read(new′)
                rm(new′)
                # test that we accept patches generated by bsdiff command
                patch = tempname()
                run(`bsdiff $old $new $patch`)
                new′ = bspatch(old, patch)
                @test new_data == read(new′)
            end
        end
    end
end
